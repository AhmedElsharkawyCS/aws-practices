service: notes-backend

frameworkVersion: "3"

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1
  memorySize: 128
  stage: production
  timeout: 5
  endpointType: REGIONAL
  environment:
    NOTES_TABLE_NAME: ${self:service}-${self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.NOTES_TABLE_NAME}"

functions:
  addNote:
    handler: api/addNote.handler
    description: Adds a new note
    events:
      - http:
          path: notes
          method: post
          cors: true
  getNote:
    handler: api/getNote.handler
    description: Gets a note by id
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
  getNotes:
    handler: api/getNotes.handler
    description: Gets all notes
    events:
      - http:
          path: notes
          method: get
          cors: true
  updateNote:
    handler: api/updateNote.handler
    description: Updates a note by id
    events:
      - http:
          path: notes/{id}
          method: put
          cors: true
  deleteNote:
    handler: api/deleteNote.handler
    description: Deletes a note by id
    events:
      - http:
          path: notes/{id}
          method: delete
          cors: true

resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.NOTES_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

        GlobalSecondaryIndexes:
          - IndexName: id-index
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
